name: Build

on:
  push:
    branches:
      - main
      - release-*
  pull_request:
    branches:
      - main
      - release-*

# https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idconcurrency
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  skip-check:
    name: Skip check
    continue-on-error: true
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip-check.outputs.should_skip }}
    permissions:
      actions: write
      contents: read
    steps:
      - id: skip-check
        uses: fkirc/skip-duplicate-actions@f75f66ce1886f00957d99748a42c724f4330bdcf # v5.3.1
        with:
          do_not_skip: '["schedule", "workflow_dispatch"]'
          paths: |-
            [
              "**.go",
              ".github/workflows/build.yml",
              "3rdparty",
              "Makefile",
              "bpf/**",
              "go.mod",
              "go.sum",
              "test/kernel/**",
              "testdata/**"
            ]
          skip_after_successful_duplicate: false

  vmtest:
    name: kernel tests
    runs-on: ubuntu-latest
    needs: skip-check
    if: ${{ needs.skip-check.outputs.should_skip != 'true' }}
    steps:
      - name: Check out the code
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Install devbox
        uses: jetpack-io/devbox-install-action@v0.7.0
        with:
          enable-cache: true

      - name: Setup devbox
        run: |
          devbox run -- echo "done!"
          devbox shellenv --init-hook >> ~/.profile
          devbox shellenv --init-hook >> ~/.bashrc

      - uses: HatsuneMiku3939/direnv-action@v1
        with:
          direnvVersion: 2.32.3

      - name: Install QEMU
        run: |
          sudo apt-get update -y
          sudo apt -y install qemu-system-x86 curl

      - name: Initialize and update git submodules
        run: git submodule init && git submodule update

      - name: Build libbpf
        run: make libbpf

      - name: Build initramfs
        run: make initramfs

      - name: Run vmtests
        run: ./test/kernel/vmtest.sh

  go-build-test:
    name: Go Build
    runs-on: ubuntu-latest
    needs: skip-check
    if: ${{ needs.skip-check.outputs.should_skip != 'true' }}
    steps:
      - name: Check out the code
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Install devbox
        uses: jetpack-io/devbox-install-action@v0.7.0
        with:
          enable-cache: true

      - name: Set up Go tool cache
        uses: actions/cache@704facf57e6136b1bc63b828d79edcd491f0ee84 # v3.3.2
        with:
          path: |
            ~/.devbox/go
          key: devbox-go-tools.cache-${{ runner.arch }}-${{ hashFiles('install-tools.sh') }}
          restore-keys: |
            devbox-go-tools.cache-${{ runner.arch }}
            devbox-go-tools.cache-

      - name: Setup devbox
        run: devbox run -- echo "done!"

      - name: Load devbox shellenv
        uses: HatsuneMiku3939/direnv-action@v1
        with:
          direnvVersion: 2.32.3

      - name: clang version
        run: |
          clang -v
          ld --version
          ld.lld --version

      - name: Show clang-format version
        run: clang-format --version

      - name: Initialize and update git submodules
        run: git submodule init && git submodule update

      - name: Go ENV
        run: go env

      - name: Install Go dependencies
        run: make go/deps

      - name: Build libbpf
        run: make libbpf

      - name: Build BPF
        run: make bpf

      - name: Build
        run: make build

      - name: Show kernel version
        run: uname -a

      - name: Show Go version
        run: |
          which go
          go version
          go env
          echo $PATH

      - name: Format
        run: make format-check

      - name: Lint
        run: make go/lint

      - name: Test
        # Some of the GH action CI machines have several versions of Go installed.
        # Make sometimes somehow resolves different Go. We need to specify explicitly.
        run: make GO=`which go` test ENABLE_RACE=yes

      - name: Integration tests
        run: make GO=`which go` test/integration

      - name: Test unwind tables
        run: make test-dwarf-unwind-tables
